#+TITLE:     Relational Calculus
#+AUTHOR:
#+EMAIL:
#+DATE:
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS: H:2 toc:nil num:t
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [smaller]
#+BEAMER_FRAME_LEVEL: 2
#+COLUMNS: %40ITEM %10BEAMER_env(Env) %9BEAMER_envargs(Env Args) %4BEAMER_col(Col) %10BEAMER_extra(Extra)
#+LaTeX_HEADER: \setbeamertemplate{footline}[frame number]
#+LaTeX_HEADER: \hypersetup{colorlinks=true,urlcolor=blue}
#+LaTeX_HEADER: \logo{\includegraphics[height=.75cm]{GeorgiaTechLogo-black-gold.png}}
#+LaTeX_HEADER: \def\ojoin{\setbox0=\hbox{$\bowtie$}\rule[-.02ex]{.25em}{.4pt}\llap{\rule[\ht0]{.25em}{.4pt}}}
#+LaTeX_HEADER: \def\leftouterjoin{\mathbin{\ojoin\mkern-5.8mu\bowtie}}
#+LaTeX_HEADER: \def\rightouterjoin{\mathbin{\bowtie\mkern-5.8mu\ojoin}}
#+LaTeX_HEADER: \def\fullouterjoin{\mathbin{\ojoin\mkern-5.8mu\bowtie\mkern-5.8mu\ojoin}}

* Relational Calculus

** Tuple Relational Calculus

Tuple relational calculus is a declarative retrieval language based on mathematical logic

  - Relational algebra is procedural -- order of operations matters

- Relational algebra and relational calculus have equivalent expressive power

- A query language $L$ is *relationally complete* if one can express in $L$ any query that can be expressed in relational calculus

In this course we cover *tuple relational calculus* which, along with relational algebra, forms the theoretical basis of SQL. Another variant, *domain relational calculus* is the theoretical basis of Query by Example (QBE), which is far less common than SQL.

** Basic Tuple Relational Caclulus Expressions

\[
\{t | COND(t)\}
\]

Where

- $t$ is a tuple variable
- $COND(t)$ is a boolean expression involving $t$

The result of the expression is all tuples $t$ for which $COND(t)$ evaluates to $true$.

** Range Relations

To find all employees whose salary is above \$50,000:

\[
\{t | EMPLOYEE(t) \text{ AND } t.Salary > 50000\}
\]

- $EMPLOYEE(t)$ is a *range relation*. All tuples $t$ come from the $EMPLOYEE$ relation.
- $t.Salary$ is the value of attribute $Salary$ for tuple $t$

\[
\{t.Fname, t.Lname | EMPLOYEE(t) \text{ AND } t.Salary > 50000\}
\]

returns only the $Fname$ and $Lname$ attributes of.

** Typical Tuple Relational Calculus Expressions

\begin{align*}
\{t.Bdate, t.Address | & EMPLOYEE(t)\\
                       & \text{ AND } t.Fname = 'John'\\
                       & \text{ AND } t.Minit = 'B'\\
                       & \text{ AND } t.Lname = 'Smith'\}
\end{align*}

- Tuple variable, $t$
- Range relation, $R(t)$. Without a range relation, $t$ ranges over all tuples in the universe

  - $EMPLOYEE(t)$

- A condition to select tuples from the range

  - $t.Fname = 'John' & \text{ AND } t.Minit = 'B' \text{ AND } t.Lname = 'Smith'$

- A set of attributes to be returned in the result

  - $t.Bdate, t.Address$

** Universal and Existential Quantification



** Example Company Database

Employee

+-------+-------+-------+-----+------------+-------------+-----+--------+-----------+-----+
| Fname | Minit | Lname | Ssn |      Bdate | Address     | Sex | Salary | Super_ssn | Dno |
+-------+-------+-------+-----+------------+-------------+-----+--------+-----------+-----+
| John  | B     | Smit  | 123 | 1965-01-09 | 731 Fondren | M   |  30000 |       333 |   5 |
+-------+-------+-------+-----+------------+-------------+-----+--------+-----------+-----+

** Complicated Example

List the names of exmployees who work on all the projects in Department 5.

\begin{align*}
\{e.Lname, e.Fname | & EMPLOYEE(e) & &\\
                     & \text{ AND } ((\forall x) ( & NOT(PROJECT(x)) &\\
                                                 & & \text{ OR NOT } (x.Dnum=5) \\
                                                 & \text{ OR } & ((\exists w)(WORKS\_ON(w) \\
                                                 &  \text{ AND } w.Essn = e.Ssn\\
                                                 &  \text{ AND } x.Pnumber = w.Pno))))\}
\end{align*}
