#+TITLE:     SQL CRUD
#+AUTHOR:    Create, Read, Update, Delete
#+EMAIL:
#+DATE:
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS: H:2 toc:nil num:t
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [smaller]
#+BEAMER_FRAME_LEVEL: 2
#+COLUMNS: %40ITEM %10BEAMER_env(Env) %9BEAMER_envargs(Env Args) %4BEAMER_col(Col) %10BEAMER_extra(Extra)
#+LaTeX_HEADER: \setbeamertemplate{footline}[frame number]
#+LaTeX_HEADER: \hypersetup{colorlinks=true,urlcolor=blue}
#+LaTeX_HEADER: \usepackage{verbatim, multicol, tabularx,}
#+LaTeX_HEADER: \usepackage{amsmath,amsthm, amssymb, latexsym, listings, qtree}
#+LaTeX_HEADER: \lstset{frame=tb, aboveskip=1mm, belowskip=0mm, showstringspaces=false, columns=flexible, basicstyle={\ttfamily}, numbers=left, frame=single, breaklines=true, breakatwhitespace=true}
#+LaTeX_HEADER: \logo{\includegraphics[height=.75cm]{GeorgiaTechLogo-black-gold.png}}

* SQL CRUD

** CRUD Operations in SQL

- Create (INSERT)
- Read (SELECT - covered later)
- Update (UPDATE)
- Delete (DELETE, DROP)

** INSERT Command

General form is
#+BEGIN_SRC sql
INSERT INTO <table_name> (<column_name> [, ...]) VALUES (<new_value> [, ...]);
#+END_SRC

Example:
#+BEGIN_SRC sql
insert into author (author_id, first_name, second_name)
    values (1, "Jenny","McCarthy");
#+END_SRC

Can leave off column names list to insert positionally:
#+BEGIN_SRC sql
insert into author values (1, "Jenny","McCarthy");
#+END_SRC

** UPDATE Command

General form:
#+BEGIN_SRC sql
UPDATE <table_name> SET <column_name>=<new_value> [, ...] WHERE expression
#+END_SRC

Example: Surely we meant Lisp inventor, AI co-founder, and Turing Award winner
John McCarthy instead of anti-vaxxer Jenny McCarthy.
#+BEGIN_SRC sql
update author set first_name='John' where last_name='McCarthy';
#+END_SRC

Notice that we can use single or double quotes in most RDBMS systems.

** DELETE Command

General form:
#+BEGIN_SRC sql
DELETE FROM <table_name> WHERE <boolean_expression>;
#+END_SRC

Example:
#+BEGIN_SRC sql
delete from author where last_name="Batty";
#+END_SRC

Can also drop whole tables:
#+BEGIN_SRC sql
DROP TABLE <table_name>
#+END_SRC

** Referential Integrity

To maintain integrity on update or delete specify:

- For ~ON DELETE~:
    - ~SET NULL~
    - ~SET DEFAULT~
- For ~ON UPDATE~
    - ~CASCADE~

Note: for MySQL ~ON DELETE RESTRICT~ is the default.

** Referential Integrity - SET NULL

Example:
#+BEGIN_SRC sql
CREATE TABLE pub (
  pub_id INT PRIMARY KEY,
  title VARCHAR(16) NOT NULL,
  book_id INT,
  foreign key (book_id) REFERENCES book(book_id) ON DELETE SET NULL
);
#+END_SRC

Means that if the row from the ~book~ table containing ~book_id~ is deleted, then ~book_id~ is set to ~NULL~ for each affected row in the ~pub~ table.

Notice that if you choose ~SET NULL~ as your ~ON DELETE~ action your column definition must allow nulls.

** Referential Integrity Constraints in MySQL

MySQL will only enforce referential integrity contraints that are specfied separately from column definitions as above. The following syntax:

#+BEGIN_SRC sql
CREATE TABLE pub (
  pub_id INT PRIMARY KEY,
  title VARCHAR(16) NOT NULL,
  book_id INT REFERENCES book(book_id) ON DELETE SET NULL
);
#+END_SRC
is valid SQL syntax but is ignored by MySQL's default InnoDB engine.

** Referential Integrity - SET DEFAULT

Example:
#+BEGIN_SRC sql
CREATE TABLE pub (
  pub_id INT PRIMARY KEY,
  title VARCHAR(16) NOT NULL,
  book_id INT DEFAULT 0 REFERENCES book(book_id) ON DELETE SET DEFAULT
);
#+END_SRC

Means that if the row from the ~book~ table containing ~book_id~ is deleted, then ~book_id~ is set to ~0~ for each affected row in the ~pub~ table.

Note: MySQL's default InnoDB engine does not implement ~ON DELETE SET DEFAULT~.

** Referential Integrity - CASCADE

Example:
#+BEGIN_SRC sql
CREATE TABLE pub (
  pub_id INT PRIMARY KEY,
  title VARCHAR(16) NOT NULL,
  book_id INT NOT NULL,
  FOREIGN KEY (book_id) REFERENCES book(book_id) ON UPDATE CASCADE
);
#+END_SRC

Means that if a ~book_id~ value changes for a row in the ~book~ table, the change is applied to the affected rows of the ~pub~ table also.

** Multiple Referential Integrity Constraints

You would normally set contraints for updates and deletes.

Example:
#+BEGIN_SRC sql
CREATE TABLE pub (
  pub_id INT PRIMARY KEY,
  title VARCHAR(16) NOT NULL,
  book_id INT,
  FOREIGN KEY (book_id) REFERENCES book(book_id)
    ON UPDATE CASCADE
    ON DELETE SET NULL
);
#+END_SRC
